import {useState, useMemo}from "react"
import Head from 'next/head'
import React, {dehydrate, useQuery, QueryClient} from "react-query"
import styles from '../styles/Home.module.css'

interface Pokemon {
  id: number
  name: string
  image: string
}

const getPokemon = (): Promise<Pokemon[]> => 
  fetch("https://jherr-pokemon.s3.us-west-1.amazonaws.com/index.json")
    .then((response) => response.json())

export async function getServerSideProps() {
  const queryClient = new React.QueryClient()
  await queryClient.prefetchQuery("pokemon", getPokemon)

  return {
    props: {
      dehydratedState: dehydrate(queryClient)
    }
  }

}

export default function Home() {
  const {data: pokemon} = React.useQuery("pokemon", getPokemon, {
    refetchOnMount: false,
    refetchOnWindowFocus: false,
  })

  const [filter, setFilter] = useState("")

  const filteredPokemon = useMemo(() => 
    pokemon?.filter((filterPokemon) => 
      filterPokemon.name.toLowerCase().includes(filter.toLowerCase())
    ), [filter, pokemon]
  )

  return(
    <div className={styles.main}>
      <Head>
        <title>Pokemon</title>
        <meta name="description" content="Generated by Create Next App" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <input 
          type="text" 
          value={filter} 
          onChange={(event) => setFilter(event.target.value)}
          className={styles.search}
        />
      </div>
      <div className={styles.container}>
        {filteredPokemon?.slice(0,20).map((mapPokemon) => (
          <div key={mapPokemon.id} className={styles.image}>
            <img 
              alt={mapPokemon.name} 
              src={`https://jherr-pokemon.s3.us-west-1.amazonaws.com/${mapPokemon.image}`}
            />
            <h2>{mapPokemon.name}</h2>
          </div>
        ))}
      </div>
    </div>
  )

}